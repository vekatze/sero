import {
  core.int.io {print-int-line},
  core.list {for},
  core.system {get-error-message},
  core.text.io {print-line},
  this.decode {decode-file},
  this.encode {encode-file},
  this.instance.int64 {int64-sero},
  this.instance.list {list-sero},
  this.sero {sero},
}

inline _list-int-sero: sero(list(int)) {
  list-sero(int64-sero)
}

define zen(): unit {
  pin value: list(int) = List[1, 2, 3, 42342, 5, 6];
  let path = "test.bin";
  let encode-result = encode-file(_list-int-sero, value, 10, path);
  match encode-result {
  | Left(e) =>
    pin e = get-error-message(e);
    print("left-encode: ");
    print-line(e)
  | Right(_) =>
    let v = decode-file(_list-int-sero, path);
    match v {
    | Left(e) =>
      pin e = get-error-message(e);
      print("left-decode: ");
      print-line(e)
    | Right(v) =>
      print("right\n");
      match v {
      | Left(_) =>
        print("right-left")
      | Right(xs) =>
        for(xs, function (x) {
          print("right-right: ");
          print-int-line(x)
        })
      }
    }
  }
}

define main(): unit {
  zen()
}
